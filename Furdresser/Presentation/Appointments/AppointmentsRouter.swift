//
//  AppointmentsRouter.swift
//  Furdresser
//
//  Created by Iga Hupalo on 24/05/2021.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift HELM Xcode Templates
//  https://github.com/HelmMobile/clean-swift-templates

import UIKit

protocol AppointmentsRouterInput {
    
}

protocol AppointmentsRouterDataSource: AnyObject {
    var selectedAppointment: Appointment? { get }
}

protocol AppointmentsRouterDataDestination: AnyObject {
    var user: User? { get set }
}

class AppointmentsRouter: AppointmentsRouterInput {
    
    weak var viewController: AppointmentsViewController!
    weak private var dataSource: AppointmentsRouterDataSource!
    weak var dataDestination: AppointmentsRouterDataDestination!

    struct SegueIdentifiers {
        static let appointmentDetails = "AppointmentDetails"
    }
    
    init(viewController: AppointmentsViewController, dataSource: AppointmentsRouterDataSource, dataDestination: AppointmentsRouterDataDestination) {
        self.viewController = viewController
        self.dataSource = dataSource
        self.dataDestination = dataDestination
    }
    
    // MARK: Navigation
    
    // MARK: Communication

    func passDataToAppointmentDetailsScene(for segue: UIStoryboardSegue) {

        if let appointmentDetailsViewController = segue.destination as? AppointmentDetailsViewController {
            appointmentDetailsViewController.router?.dataDestination.appointment = dataSource.selectedAppointment
            appointmentDetailsViewController.delegate = viewController
        }
    }
    
    func passDataToNextScene(for segue: UIStoryboardSegue) {

        guard let segueIdentifier = segue.identifier else {
            return
        }

        switch segueIdentifier {
        case SegueIdentifiers.appointmentDetails:
            passDataToAppointmentDetailsScene(for: segue)
        default:
            return
        }
    }
}
